"""Add articles, collections, categories tables

Revision ID: 720544a192ce
Revises: 7a29f845b12d
Create Date: 2025-07-24 17:25:40.867222

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '720544a192ce'
down_revision: Union[str, None] = '7a29f845b12d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False, comment='Category name'),
    sa.Column('slug', sa.String(length=100), nullable=False, comment='URL-friendly slug'),
    sa.Column('description', sa.Text(), nullable=True, comment='Category description'),
    sa.Column('parent_id', sa.Integer(), nullable=True, comment='Parent category ID (for subcategories)'),
    sa.Column('color', sa.String(length=7), nullable=True, comment='Category color (hex code)'),
    sa.Column('icon', sa.String(length=50), nullable=True, comment='Category icon name'),
    sa.Column('order_index', sa.Integer(), nullable=False, comment='Display order'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Whether category is active'),
    sa.Column('article_count', sa.Integer(), nullable=False, comment='Number of articles in this category'),
    sa.Column('meta_description', sa.String(length=160), nullable=True, comment='SEO meta description'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True, comment='Last update timestamp'),
    sa.ForeignKeyConstraint(['parent_id'], ['categories.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index('idx_category_active_order', 'categories', ['is_active', 'order_index'], unique=False)
    op.create_index('idx_category_parent_order', 'categories', ['parent_id', 'order_index'], unique=False)
    op.create_index(op.f('ix_categories_id'), 'categories', ['id'], unique=False)
    op.create_index(op.f('ix_categories_parent_id'), 'categories', ['parent_id'], unique=False)
    op.create_index(op.f('ix_categories_slug'), 'categories', ['slug'], unique=True)
    op.create_table('tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False, comment='Tag name'),
    sa.Column('slug', sa.String(length=50), nullable=False, comment='URL-friendly slug'),
    sa.Column('description', sa.Text(), nullable=True, comment='Tag description'),
    sa.Column('usage_count', sa.Integer(), nullable=False, comment='Number of times this tag is used'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Whether tag is active'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Creation timestamp'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_tags_id'), 'tags', ['id'], unique=False)
    op.create_index(op.f('ix_tags_slug'), 'tags', ['slug'], unique=True)
    op.create_table('collections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False, comment='Collection title'),
    sa.Column('slug', sa.String(length=255), nullable=False, comment='URL-friendly slug'),
    sa.Column('description', sa.Text(), nullable=True, comment='Collection description'),
    sa.Column('type', sa.String(length=20), nullable=False, comment='Collection type (series, book, anthology, course)'),
    sa.Column('cover_image', sa.String(length=512), nullable=True, comment='Cover image URL'),
    sa.Column('author_id', sa.Integer(), nullable=False, comment='Collection author ID'),
    sa.Column('status', sa.String(length=20), nullable=False, comment='Collection status'),
    sa.Column('is_featured', sa.Boolean(), nullable=False, comment='Whether collection is featured'),
    sa.Column('allow_comments', sa.Boolean(), nullable=False, comment='Whether comments are allowed on collection'),
    sa.Column('is_public', sa.Boolean(), nullable=False, comment='Whether collection is publicly visible'),
    sa.Column('is_premium', sa.Boolean(), nullable=False, comment='Whether collection requires payment'),
    sa.Column('price', sa.Integer(), nullable=True, comment='Price in cents (for premium collections)'),
    sa.Column('article_count', sa.Integer(), nullable=False, comment='Total number of articles in collection'),
    sa.Column('published_article_count', sa.Integer(), nullable=False, comment='Number of published articles'),
    sa.Column('total_reading_time', sa.Integer(), nullable=True, comment='Total estimated reading time in minutes'),
    sa.Column('view_count', sa.Integer(), nullable=False, comment='Total view count'),
    sa.Column('subscriber_count', sa.Integer(), nullable=False, comment='Number of subscribers (future feature)'),
    sa.Column('meta_description', sa.String(length=160), nullable=True, comment='SEO meta description'),
    sa.Column('meta_keywords', sa.String(length=255), nullable=True, comment='SEO keywords'),
    sa.Column('published_at', sa.DateTime(timezone=True), nullable=True, comment='Publication timestamp'),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True, comment='Completion timestamp'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True, comment='Last update timestamp'),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_collection_author_status', 'collections', ['author_id', 'status'], unique=False)
    op.create_index('idx_collection_published', 'collections', ['published_at', 'status'], unique=False)
    op.create_index('idx_collection_type_status', 'collections', ['type', 'status'], unique=False)
    op.create_index(op.f('ix_collections_author_id'), 'collections', ['author_id'], unique=False)
    op.create_index(op.f('ix_collections_id'), 'collections', ['id'], unique=False)
    op.create_index(op.f('ix_collections_published_at'), 'collections', ['published_at'], unique=False)
    op.create_index(op.f('ix_collections_slug'), 'collections', ['slug'], unique=True)
    op.create_index(op.f('ix_collections_status'), 'collections', ['status'], unique=False)
    op.create_index(op.f('ix_collections_type'), 'collections', ['type'], unique=False)
    op.create_table('articles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False, comment='Article title'),
    sa.Column('slug', sa.String(length=255), nullable=False, comment='URL-friendly slug (auto-generated from title)'),
    sa.Column('summary', sa.Text(), nullable=True, comment='Article summary/excerpt (max 500 chars)'),
    sa.Column('content', sa.Text(), nullable=False, comment='Main article content (Markdown or HTML)'),
    sa.Column('meta_description', sa.String(length=160), nullable=True, comment='SEO meta description (max 160 chars)'),
    sa.Column('meta_keywords', sa.String(length=255), nullable=True, comment='SEO keywords (comma-separated)'),
    sa.Column('reading_time', sa.Integer(), nullable=True, comment='Estimated reading time in minutes'),
    sa.Column('author_id', sa.Integer(), nullable=False, comment='Author user ID'),
    sa.Column('category_id', sa.Integer(), nullable=True, comment='Article category ID'),
    sa.Column('collection_id', sa.Integer(), nullable=True, comment='Collection ID (for series/books)'),
    sa.Column('order_in_collection', sa.Integer(), nullable=True, comment='Order within collection (1, 2, 3...)'),
    sa.Column('status', sa.String(length=20), nullable=False, comment='Publication status'),
    sa.Column('is_featured', sa.Boolean(), nullable=False, comment='Whether article is featured'),
    sa.Column('allow_comments', sa.Boolean(), nullable=False, comment='Whether comments are allowed'),
    sa.Column('published_at', sa.DateTime(timezone=True), nullable=True, comment='Publication timestamp'),
    sa.Column('scheduled_at', sa.DateTime(timezone=True), nullable=True, comment='Scheduled publication time'),
    sa.Column('view_count', sa.Integer(), nullable=False, comment='Total view count'),
    sa.Column('like_count', sa.Integer(), nullable=False, comment='Total like count'),
    sa.Column('comment_count', sa.Integer(), nullable=False, comment='Total comment count'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True, comment='Last update timestamp'),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['collection_id'], ['collections.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_article_author_status', 'articles', ['author_id', 'status'], unique=False)
    op.create_index('idx_article_collection_order', 'articles', ['collection_id', 'order_in_collection'], unique=False)
    op.create_index('idx_article_published', 'articles', ['published_at', 'status'], unique=False)
    op.create_index(op.f('ix_articles_author_id'), 'articles', ['author_id'], unique=False)
    op.create_index(op.f('ix_articles_category_id'), 'articles', ['category_id'], unique=False)
    op.create_index(op.f('ix_articles_collection_id'), 'articles', ['collection_id'], unique=False)
    op.create_index(op.f('ix_articles_id'), 'articles', ['id'], unique=False)
    op.create_index(op.f('ix_articles_published_at'), 'articles', ['published_at'], unique=False)
    op.create_index(op.f('ix_articles_slug'), 'articles', ['slug'], unique=True)
    op.create_index(op.f('ix_articles_status'), 'articles', ['status'], unique=False)
    op.create_table('article_tags',
    sa.Column('article_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['article_id'], ['articles.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('article_id', 'tag_id')
    )
    op.create_index('idx_article_tags_article', 'article_tags', ['article_id'], unique=False)
    op.create_index('idx_article_tags_tag', 'article_tags', ['tag_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_article_tags_tag', table_name='article_tags')
    op.drop_index('idx_article_tags_article', table_name='article_tags')
    op.drop_table('article_tags')
    op.drop_index(op.f('ix_articles_status'), table_name='articles')
    op.drop_index(op.f('ix_articles_slug'), table_name='articles')
    op.drop_index(op.f('ix_articles_published_at'), table_name='articles')
    op.drop_index(op.f('ix_articles_id'), table_name='articles')
    op.drop_index(op.f('ix_articles_collection_id'), table_name='articles')
    op.drop_index(op.f('ix_articles_category_id'), table_name='articles')
    op.drop_index(op.f('ix_articles_author_id'), table_name='articles')
    op.drop_index('idx_article_published', table_name='articles')
    op.drop_index('idx_article_collection_order', table_name='articles')
    op.drop_index('idx_article_author_status', table_name='articles')
    op.drop_table('articles')
    op.drop_index(op.f('ix_collections_type'), table_name='collections')
    op.drop_index(op.f('ix_collections_status'), table_name='collections')
    op.drop_index(op.f('ix_collections_slug'), table_name='collections')
    op.drop_index(op.f('ix_collections_published_at'), table_name='collections')
    op.drop_index(op.f('ix_collections_id'), table_name='collections')
    op.drop_index(op.f('ix_collections_author_id'), table_name='collections')
    op.drop_index('idx_collection_type_status', table_name='collections')
    op.drop_index('idx_collection_published', table_name='collections')
    op.drop_index('idx_collection_author_status', table_name='collections')
    op.drop_table('collections')
    op.drop_index(op.f('ix_tags_slug'), table_name='tags')
    op.drop_index(op.f('ix_tags_id'), table_name='tags')
    op.drop_table('tags')
    op.drop_index(op.f('ix_categories_slug'), table_name='categories')
    op.drop_index(op.f('ix_categories_parent_id'), table_name='categories')
    op.drop_index(op.f('ix_categories_id'), table_name='categories')
    op.drop_index('idx_category_parent_order', table_name='categories')
    op.drop_index('idx_category_active_order', table_name='categories')
    op.drop_table('categories')
    # ### end Alembic commands ###
